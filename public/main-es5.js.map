{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/Indium-software-Logo.png","webpack:///src/app/auth/auth.guard.ts","webpack:///src/app/auth/auth.module.ts","webpack:///src/app/auth/login/login.component.ts","webpack:///src/app/auth/login/login.component.html","webpack:///src/app/auth/signup/equal-validator.directive.ts","webpack:///src/app/auth/signup/signup.component.ts","webpack:///src/app/auth/signup/signup.component.html","webpack:///src/app/auth/user.service.ts","webpack:///src/app/layouts/auth-default/auth-default.component.ts","webpack:///src/app/layouts/auth-default/auth-default.component.html","webpack:///src/app/layouts/auth-default/auth-default.module.ts","webpack:///src/app/layouts/default/default.component.ts","webpack:///src/app/layouts/default/default.component.html","webpack:///src/app/layouts/default/default.module.ts","webpack:///src/app/modules/dashboard/dashboard.component.ts","webpack:///src/app/modules/dashboard/dashboard.component.html","webpack:///src/app/modules/insurance/calculate/calculate.component.ts","webpack:///src/app/modules/insurance/calculate/calculate.component.html","webpack:///src/app/modules/insurance/course-show/course-show.component.ts","webpack:///src/app/modules/insurance/course-show/course-show.component.html","webpack:///src/app/modules/insurance/insurance-create/insurance-create.component.ts","webpack:///src/app/modules/insurance/insurance-create/insurance-create.component.html","webpack:///src/app/modules/insurance/insurance.component.ts","webpack:///src/app/modules/insurance/insurance.component.html","webpack:///src/app/modules/insurance/insurance.service.ts","webpack:///src/app/modules/insurance/safe.pipe.ts","webpack:///src/app/shared/components/footer/footer.component.ts","webpack:///src/app/shared/components/header/header.component.ts","webpack:///src/app/shared/components/header/header.component.html","webpack:///src/app/shared/components/sidebar/sidebar.component.ts","webpack:///src/app/shared/components/sidebar/sidebar.component.html","webpack:///src/app/shared/shared.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","children","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AuthGuard","_router","cache","localStorage","getItem","navigate","providedIn","AuthModule","LoginComponent","_us","logo","user","username","email","password","is_admin","error","hide","alert","nativeElement","classList","remove","form","login","value","subscribe","res","console","log","length","Object","setItem","userId","err","add","closeAlert","EqualValidator","validateEqual","reverse","c","v","root","get","isReverse","errors","setErrors","provide","useExisting","multi","SignupComponent","confirm_password","signup","UserService","_http","dburl","post","clear","insurance","patch","AuthDefaultComponent","AuthDefaultModule","schemas","DefaultComponent","observableMedia","sidebaropen","asObservable","change","mqAlias","sidebar","DefaultModule","DashboardComponent","CalculateComponent","dialogRef","data","_cs","CourseShowComponent","_route","dialog","course","name","description","uri","snapshot","params","InsuranceCreateComponent","_is","premium","isloading","gender","age","hypertension","pressure","sugar","overweight","smooking","alcohol","exercise","drugs","open","height","width","calculate_insurance","calculate","InsuranceComponent","displayedColumns","dataSource","totalpage","page","pagesize","paginator","get_all_insurances","pageevent","pageIndex","pagechange","InsuranceService","query","SafePipe","sanitizer","url","bypassSecurityTrustResourceUrl","FooterComponent","HeaderComponent","toggleSideBarForMe","emit","logout","toggleSideBar","SidebarComponent","SharedModule","environment","production","api_url","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DefaultComponent } from './layouts/default/default.component';\r\nimport { DashboardComponent } from './modules/dashboard/dashboard.component';\r\nimport { LoginComponent } from './auth/login/login.component';\r\nimport { SignupComponent } from './auth/signup/signup.component';\r\nimport { CourseShowComponent } from './modules/insurance/course-show/course-show.component';\r\nimport { InsuranceCreateComponent } from './modules/insurance/insurance-create/insurance-create.component';\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport { InsuranceComponent } from './modules/insurance/insurance.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DefaultComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: DashboardComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: 'insurances',\r\n        component: InsuranceComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: 'insurance/new',\r\n        component: InsuranceCreateComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: 'insurance/show/:id',\r\n        component: CourseShowComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: 'course/:id/edit',\r\n        component: InsuranceCreateComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path: 'signup',\r\n    component: SignupComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'training';\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { DefaultModule } from './layouts/default/default.module';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { AuthDefaultModule } from './layouts/auth-default/auth-default.module';\r\nimport { AuthModule } from './auth/auth.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    DefaultModule,\r\n    SharedModule,\r\n    AuthDefaultModule,\r\n    AuthModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = __webpack_public_path__ + \"Indium-software-Logo.png\";","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private _router: Router) {}\r\n  canActivate() {\r\n  \tlet cache = localStorage.getItem(\"currentuser\")\r\n  \tif(cache == null) {\r\n  \t\tthis._router.navigate([\"/login\"]);\r\n  \t}\r\n  \telse {\r\n  \t  return true;\r\n  \t}\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { MatCardModule, MatFormFieldModule, MatButtonModule, MatInputModule, MatDividerModule, MatIconModule, MatCheckboxModule } from '@angular/material';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { EqualValidator } from './signup/equal-validator.directive';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent,\r\n    SignupComponent,\r\n    EqualValidator\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatDividerModule,\r\n    MatIconModule,\r\n    RouterModule,\r\n    MatCheckboxModule\r\n  ],\r\n  exports: [\r\n    LoginComponent,\r\n    SignupComponent\r\n  ]\r\n})\r\nexport class AuthModule { }\r\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { UserService } from '../user.service';\r\nimport { User } from '../user';\r\nimport { Router } from '@angular/router';\r\n\r\ndeclare var require: any;\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  @ViewChild('alert', { static: true }) alert: ElementRef;\r\n\r\n  constructor(private _us:UserService, private _router: Router) { }\r\n\r\n  public logo = require(\"src/app/auth/Indium-software-Logo.png\");\r\n\r\n  public user:any = {  username: \"\", email: \"\", password: \"\", is_admin: false };\r\n\r\n  ngOnInit(): void {\r\n    this.alert.nativeElement.classList.remove('show');\r\n  }\r\n\r\n  closeAlert() {\r\n    this.alert.nativeElement.classList.remove('show');\r\n  }\r\n\r\n  error = \"\";\r\n\r\n  hide = true;\r\n\r\n  login(form) {\r\n    this._us.login(form.value).subscribe(\r\n      res => {\r\n        console.log(\"res\", res);\r\n        let length = Object.keys(res).length;\r\n  \t\t\tif(length == 4) {\r\n         localStorage.setItem(\"currentuser\", res.username);\r\n         localStorage.setItem(\"email\", this.user.email);\r\n         localStorage.setItem(\"user_id\", res.userId);\r\n         console.log(\"localstorage\", localStorage);\r\n  \t\t\t this._router.navigate([\"/\"]);\r\n  \t\t\t}\r\n  \t\t\telse {\r\n  \t\t\t this._router.navigate([\"/login\"]);\r\n  \t\t\t}\r\n  \t\t},\r\n  \t\terr => {\r\n        this.error = err.error.err;\r\n        this.alert.nativeElement.classList.add('show');\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","<div #alert class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\r\n  <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"closeAlert()\">\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n  {{ error }}\r\n</div>\r\n\r\n<div class=\"main-div\">\r\n  <mat-card class=\"z-depth center\" flex=\"50\" >\r\n    <div class=\"profile-card\">\r\n      <div class=\"header\">\r\n        <h2>Login</h2>\r\n      </div>\r\n      <img [src]=\"logo\" alt=\"Login\">\r\n    </div>\r\n\r\n    <mat-divider></mat-divider>\r\n\r\n    <div class=\"profile-card\">\r\n      <div class=\"header\">\r\n      </div>\r\n    </div>\r\n\r\n    <form class=\"example-form\" #form=\"ngForm\" (submit)=\"login(form)\">\r\n      <mat-form-field class=\"example-full-width\">\r\n        <input type=\"email\" name=\"email\" matInput [(ngModel)]=\"user.email\" #email=\"ngModel\" required placeholder=\"Email\">\r\n        <mat-icon matSuffix>email</mat-icon>\r\n        <mat-error *ngIf=\"email.invalid\">Email must be present</mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <input [type]=\"hide ? 'password' : 'text'\" name=\"password\" matInput [(ngModel)]=\"user.password\" #password=\"ngModel\" required placeholder=\"Password\">\r\n        <mat-icon matSuffix (click)=\"hide = !hide\">{{ hide ? 'visibility_off' : 'visibility' }}</mat-icon>\r\n        <mat-error *ngIf=\"password.invalid\">Password must be present</mat-error>\r\n      </mat-form-field>\r\n      <button mat-raised-button color=\"primary\" [disabled]=\"form.invalid\">Login</button>\r\n    </form>\r\n\r\n    <div class=\"profile-card\">\r\n      <div class=\"header\">\r\n      </div>\r\n    </div>\r\n\r\n    <mat-divider></mat-divider>\r\n\r\n    <div class=\"profile-card\">\r\n      <div class=\"header\">\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"profile-card\">\r\n      <div class=\"header\">\r\n        <h6>Can't login?</h6>\r\n        <h6><a routerLink=\"/signup\">Sign up for an account</a></h6>\r\n      </div>\r\n    </div>\r\n\r\n  </mat-card>\r\n</div>\r\n","import { Directive, forwardRef, Attribute } from '@angular/core';\r\nimport { Validator, AbstractControl, NG_VALIDATORS } from '@angular/forms';\r\n\r\n@Directive({\r\n    selector: '[validateEqual][formControlName],[validateEqual][formControl],[validateEqual][ngModel]',\r\n    providers: [\r\n        { provide: NG_VALIDATORS, useExisting: forwardRef(() => EqualValidator), multi: true }\r\n    ]\r\n})\r\nexport class EqualValidator implements Validator {\r\n    constructor(@Attribute('validateEqual') public validateEqual: string,\r\n    @Attribute('reverse') public reverse: string) {\r\n    }\r\n\r\n    private get isReverse() {\r\n        if (!this.reverse) return false;\r\n        return this.reverse === 'true' ? true: false;\r\n    }\r\n\r\n    validate(c: AbstractControl): { [key: string]: any } {\r\n        // self value\r\n        let v = c.value;\r\n\r\n        // control vlaue\r\n        let e = c.root.get(this.validateEqual);\r\n\r\n        // value not equal\r\n        if (e && v !== e.value && !this.isReverse) {\r\n            return {\r\n                validateEqual: false\r\n            }\r\n        }\r\n\r\n        // value equal and reverse\r\n        if (e && v === e.value && this.isReverse) {\r\n            delete e.errors['validateEqual'];\r\n            if (!Object.keys(e.errors).length) e.setErrors(null);\r\n        }\r\n\r\n        // value not equal and reverse\r\n        if (e && v !== e.value && this.isReverse) {\r\n            e.setErrors({ validateEqual: false });\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { UserService } from '../user.service';\r\nimport { User } from '../user';\r\nimport { Router } from '@angular/router';\r\n\r\ndeclare var require: any;\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.scss']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n\r\n  @ViewChild('alert', { static: true }) alert: ElementRef;\r\n\r\n  constructor(private _us:UserService, private _router: Router) { }\r\n\r\n  public logo = require(\"src/app/auth/Indium-software-Logo.png\");\r\n\r\n  public user:any = { username: \"\", email: \"\", password: \"\", confirm_password: \"\", is_admin: false };\r\n\r\n  ngOnInit(): void {\r\n    this.alert.nativeElement.classList.remove('show');\r\n  }\r\n\r\n  closeAlert() {\r\n    this.alert.nativeElement.classList.remove('show');\r\n  }\r\n\r\n  hide = true;\r\n\r\n  signup(form) {\r\n    console.log(\"form\", form.value);\r\n    this._us.signup(form.value).subscribe(\r\n      res => {\r\n        this._router.navigate([\"/login\"]);\r\n      },\r\n      err => {\r\n        this.alert.nativeElement.classList.add('show');\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","<div #alert class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\r\n  <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"closeAlert()\">\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n  There was a problem with user details.\r\n</div>\r\n\r\n<div class=\"main-div\">\r\n  <mat-card class=\"z-depth center\" flex=\"50\" >\r\n    <div class=\"profile-card\">\r\n      <div class=\"header\">\r\n        <h2>Register</h2>\r\n      </div>\r\n      <img [src]=\"logo\" alt=\"Register\">\r\n    </div>\r\n\r\n    <mat-divider></mat-divider>\r\n\r\n    <div class=\"profile-card\">\r\n      <div class=\"header\">\r\n      </div>\r\n    </div>\r\n\r\n    <form class=\"example-form\" #form=\"ngForm\" (submit)=\"signup(form)\">\r\n      <mat-form-field class=\"example-full-width\">\r\n        <input type=\"text\" name=\"username\" matInput [(ngModel)]=\"user.username\" #username=\"ngModel\" required placeholder=\"Username\">\r\n        <mat-icon matSuffix>person_outline</mat-icon>\r\n        <mat-error *ngIf=\"username.invalid\">Username must be present</mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <input type=\"email\" name=\"email\" matInput [(ngModel)]=\"user.email\" #email=\"ngModel\" required placeholder=\"Email\">\r\n        <mat-icon matSuffix>email</mat-icon>\r\n        <mat-error *ngIf=\"email.invalid\">Email must be present</mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <input [type]=\"hide ? 'password' : 'text'\" name=\"password\" matInput [(ngModel)]=\"user.password\" #password=\"ngModel\" required placeholder=\"Password\" validateEqual=\"confirm_password\" reverse=\"true\">\r\n        <mat-icon matSuffix (click)=\"hide = !hide\">{{ hide ? 'visibility_off' : 'visibility' }}</mat-icon>\r\n        <mat-error *ngIf=\"password.invalid\">Password must be present</mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <input [type]=\"hide ? 'password' : 'text'\" name=\"confirm_password\" matInput [(ngModel)]=\"user.confirm_password\" #confirm_password=\"ngModel\" required placeholder=\"Password confirmation\" validateEqual=\"password\">\r\n        <mat-icon matSuffix (click)=\"hide = !hide\">{{ hide ? 'visibility_off' : 'visibility' }}</mat-icon>\r\n        <mat-error *ngIf=\"confirm_password.invalid || confirm_password.errors?.validateEqual\">Password must be present and password must be match with password confirmation.</mat-error>\r\n      </mat-form-field>\r\n      <button mat-raised-button color=\"primary\" [disabled]=\"form.invalid\">Signup</button>\r\n    </form>\r\n\r\n    <div class=\"profile-card\">\r\n      <div class=\"header\">\r\n      </div>\r\n    </div>\r\n\r\n    <mat-divider></mat-divider>\r\n\r\n    <div class=\"profile-card\">\r\n      <div class=\"header\">\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"profile-card\">\r\n      <div class=\"header\">\r\n        <h6>Already have an account?</h6>\r\n        <h6><a routerLink=\"/login\">Log in for an account</a></h6>\r\n      </div>\r\n    </div>\r\n\r\n  </mat-card>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { User } from './user';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  public dburl = \"\";\r\n\r\n  public user:any = { username: \"\", email: \"\", password: \"\" };\r\n\r\n  public login(user:User):Observable<User> {\r\n    return this._http.post<User>(this.dburl + \"/api/user/login\", user);\r\n  }\r\n\r\n  public signup(user:User):Observable<User> {\r\n    return this._http.post<User>(this.dburl + \"/api/user/signup\", user);\r\n  }\r\n\r\n  public logout() {\r\n  \tlocalStorage.clear();\r\n  }\r\n\r\n  public add_insurance(id:string, insurance:any):Observable<User> {\r\n    return this._http.patch<User>(this.dburl + \"/api/user/\" + id, insurance);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-auth-default',\r\n  templateUrl: './auth-default.component.html',\r\n  styleUrls: ['./auth-default.component.scss']\r\n})\r\nexport class AuthDefaultComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AuthDefaultComponent } from './auth-default.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AuthDefaultComponent\r\n  ],\r\n  schemas: [\r\n    CUSTOM_ELEMENTS_SCHEMA\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ]\r\n})\r\nexport class AuthDefaultModule { }\r\n","import { AfterContentInit, Component, OnInit } from '@angular/core';\r\nimport { MediaChange, MediaObserver } from '@angular/flex-layout';\r\n\r\n@Component({\r\n  selector: 'app-default',\r\n  templateUrl: './default.component.html',\r\n  styleUrls: ['./default.component.scss']\r\n})\r\nexport class DefaultComponent implements OnInit {\r\n\r\n  constructor(private observableMedia: MediaObserver) { }\r\n\r\n  sidebaropen = true;\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.observableMedia.asObservable().subscribe((change: MediaChange[]) => {\r\n      if(change[0].mqAlias == 'xs') {\r\n        this.sidebaropen = false\r\n      }\r\n      else {\r\n        this.sidebaropen = true\r\n      }\r\n    });\r\n  }\r\n\r\n  sidebar() {\r\n    this.sidebaropen = !this.sidebaropen;\r\n  }\r\n\r\n}\r\n","<app-header (toggleSideBarForMe)=\"sidebar()\"></app-header>\r\n<mat-drawer-container>\r\n  <mat-drawer mode=\"side\" [opened]=\"sidebaropen\">\r\n    <app-sidebar></app-sidebar>\r\n  </mat-drawer>\r\n  <mat-drawer-content>\r\n    <router-outlet></router-outlet>\r\n  </mat-drawer-content>\r\n</mat-drawer-container>\r\n<app-footer></app-footer>\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DefaultComponent } from './default.component';\r\nimport { DashboardComponent } from 'src/app/modules/dashboard/dashboard.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { MatSidenavModule, MatPaginatorModule, MatGridListModule, MatProgressSpinnerModule, MatButtonModule, MatFormFieldModule, MatCardModule, MatInputModule, MatDialogModule, MatDividerModule, MatRadioModule, MatTableModule } from '@angular/material';\r\nimport { CourseShowComponent } from 'src/app/modules/insurance/course-show/course-show.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { SafePipe } from 'src/app/modules/insurance/safe.pipe';\r\nimport { InsuranceCreateComponent } from 'src/app/modules/insurance/insurance-create/insurance-create.component';\r\nimport { CalculateComponent } from 'src/app/modules/insurance/calculate/calculate.component';\r\nimport { InsuranceComponent } from 'src/app/modules/insurance/insurance.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DefaultComponent,\r\n    DashboardComponent,\r\n    InsuranceComponent,\r\n    InsuranceCreateComponent,\r\n    CourseShowComponent,\r\n    SafePipe,\r\n    CalculateComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    SharedModule,\r\n    MatSidenavModule,\r\n    MatPaginatorModule,\r\n    MatGridListModule,\r\n    MatProgressSpinnerModule,\r\n    FormsModule,\r\n    MatButtonModule,\r\n    MatFormFieldModule,\r\n    MatCardModule,\r\n    MatInputModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatRadioModule,\r\n    MatTableModule\r\n  ],\r\n  schemas: [\r\n    CUSTOM_ELEMENTS_SCHEMA\r\n  ],\r\n  exports: [\r\n    InsuranceCreateComponent,\r\n    CourseShowComponent,\r\n    SafePipe\r\n  ]\r\n})\r\nexport class DefaultModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"image\"></div>\r\n","import {Component, Inject, Injectable} from  '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport {MatDialogRef, MAT_DIALOG_DATA, MatDialog} from  '@angular/material/dialog';\r\nimport { UserService } from '../../../auth/user.service';\r\nimport { InsuranceService } from '../insurance.service';\r\n\r\n@Component({\r\ntemplateUrl:  'calculate.component.html'\r\n})\r\nexport class CalculateComponent {\r\n  constructor(private  dialogRef:  MatDialogRef<CalculateComponent>, private _router: Router, @Inject(MAT_DIALOG_DATA) public data: any, private _us: UserService, private _cs: InsuranceService) {\r\n  }\r\n\r\n  \r\n}\r\n","<h1 mat-dialog-title>Premium of this insurance</h1>\r\n<div mat-dialog-content>\r\n<p>{{data.id}}</p>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button [mat-dialog-close]=\"data.premium\" cdkFocusInitial>Ok</button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { InsuranceService } from '../insurance.service';\r\nimport { SafePipe } from '../safe.pipe';\r\nimport { MatDialog, MatDialogRef } from  '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-course-show',\r\n  templateUrl: './course-show.component.html',\r\n  styleUrls: ['./course-show.component.css']\r\n})\r\nexport class CourseShowComponent implements OnInit {\r\n\r\n  public id:string = \"\";\r\n  public course:any = { name: \"\", description: \"\", uri: \"\" };\r\n\r\n  constructor(private _route: ActivatedRoute, private _cs: InsuranceService, private _router:Router, private  dialog:  MatDialog) {\r\n    this.id = this._route.snapshot.params.id;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this._cs.get_course(this.id).subscribe(\r\n    //   res => {\r\n    //     this.course = res;\r\n    //   }\r\n    // )\r\n  }\r\n\r\n}\r\n","<h3 align=\"center\">{{ course.name }}</h3>\r\n<p align=\"center\">{{ course.description }}</p>\r\n<div class=\"embed-responsive embed-responsive-16by9 adjust-size\">\r\n  <iframe class=\"embed-responsive-item\" [src]=\"course.uri | safe\" allowfullscreen></iframe>\r\n</div>\r\n<button class=\"middle\" mat-raised-button color=\"primary\">Complete course</button>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Insurance } from '../insurance';\r\nimport { InsuranceService } from '../insurance.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog, MatDialogRef } from  '@angular/material';\r\nimport { CalculateComponent } from '../calculate/calculate.component';\r\n\r\n@Component({\r\n  selector: 'app-insurance-create',\r\n  templateUrl: './insurance-create.component.html',\r\n  styleUrls: ['./insurance-create.component.css']\r\n})\r\nexport class InsuranceCreateComponent implements OnInit {\r\n\r\n  constructor(private _is: InsuranceService, private _router:Router, private  dialog:  MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  premium: number = 5000;\r\n  isloading:boolean = false;\r\n\r\n  insurance:any = {\r\n    name: \"Meena\",\r\n    gender: \"male\",\r\n    age: null,\r\n    hypertension: \"false\",\r\n    pressure: \"false\",\r\n    sugar: \"false\",\r\n    overweight: \"false\",\r\n    smooking: \"false\",\r\n    alcohol: \"false\",\r\n    exercise: \"false\",\r\n    drugs: \"false\"\r\n  };\r\n\r\n  calculate() {\r\n    this.dialog.open(CalculateComponent, {\r\n      height: '250px',\r\n      width: '300px',\r\n      data: {\r\n        id: this.premium\r\n      }\r\n    });\r\n  }\r\n\r\n  submit(form) {\r\n    this._is.calculate_insurance(this.insurance).subscribe(\r\n      res => {\r\n        this.premium = res.premium;\r\n        this.calculate();\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","<mat-spinner class=\"mat-middle\" *ngIf=\"isloading\"></mat-spinner>\r\n<mat-card *ngIf=\"!isloading\">\r\n  <form class=\"example-form\" #form=\"ngForm\" (submit)=\"submit(form)\">\r\n    <mat-form-field class=\"example-full-width\">\r\n      <input type=\"text\" name=\"name\" matInput [(ngModel)]=\"insurance.name\" #name=\"ngModel\" required placeholder=\"Name\" required>\r\n    </mat-form-field>\r\n    <div class=\"example-full-width\">\r\n      <label id=\"example-radio-group-label\">Gender</label>\r\n      <mat-radio-group [(ngModel)]=\"insurance.gender\" [ngModelOptions]=\"{standalone: true}\">\r\n        <mat-radio-button value=\"male\">Male</mat-radio-button>\r\n        <mat-radio-button value=\"female\">Female</mat-radio-button>\r\n      </mat-radio-group>      \r\n    </div>\r\n    <mat-form-field class=\"example-full-width\">\r\n      <input type=\"number\" name=\"age\" matInput [(ngModel)]=\"insurance.age\" #age=\"ngModel\" placeholder=\"Age\" required>\r\n    </mat-form-field>\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <mat-card-title>Current health</mat-card-title>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <div class=\"example-full-width\">\r\n          <label id=\"example-radio-group-label\">Hypertension</label>\r\n          <mat-radio-group [(ngModel)]=\"insurance.hypertension\" [ngModelOptions]=\"{standalone: true}\">\r\n            <mat-radio-button value=\"true\">Yes</mat-radio-button>\r\n            <mat-radio-button value=\"false\">No</mat-radio-button>\r\n          </mat-radio-group>      \r\n        </div>\r\n        <div class=\"example-full-width\">\r\n          <label id=\"example-radio-group-label\">Blood pressure</label>\r\n          <mat-radio-group [(ngModel)]=\"insurance.pressure\" [ngModelOptions]=\"{standalone: true}\">\r\n            <mat-radio-button value=\"true\">Yes</mat-radio-button>\r\n            <mat-radio-button value=\"false\">No</mat-radio-button>\r\n          </mat-radio-group>\r\n        </div>\r\n        <div class=\"example-full-width\">\r\n          <label id=\"example-radio-group-label\">Blood sugar</label>\r\n          <mat-radio-group [(ngModel)]=\"insurance.sugar\" [ngModelOptions]=\"{standalone: true}\">\r\n            <mat-radio-button value=\"true\">Yes</mat-radio-button>\r\n            <mat-radio-button value=\"false\">No</mat-radio-button>\r\n          </mat-radio-group>\r\n        </div>\r\n        <div class=\"example-full-width\">\r\n          <label id=\"example-radio-group-label\">Overweight</label>\r\n          <mat-radio-group [(ngModel)]=\"insurance.overweight\" [ngModelOptions]=\"{standalone: true}\">\r\n            <mat-radio-button value=\"true\">Yes</mat-radio-button>\r\n            <mat-radio-button value=\"false\">No</mat-radio-button>\r\n          </mat-radio-group>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <mat-card-title>Habits</mat-card-title>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <div class=\"example-full-width\">\r\n          <label id=\"example-radio-group-label\">Smooking</label>\r\n          <mat-radio-group [(ngModel)]=\"insurance.smooking\" [ngModelOptions]=\"{standalone: true}\">\r\n            <mat-radio-button value=\"true\">Yes</mat-radio-button>\r\n            <mat-radio-button value=\"false\">No</mat-radio-button>\r\n          </mat-radio-group>      \r\n        </div>\r\n        <div class=\"example-full-width\">\r\n          <label id=\"example-radio-group-label\">Alcohol</label>\r\n          <mat-radio-group [(ngModel)]=\"insurance.alcohol\" [ngModelOptions]=\"{standalone: true}\">\r\n            <mat-radio-button value=\"true\">Yes</mat-radio-button>\r\n            <mat-radio-button value=\"false\">No</mat-radio-button>\r\n          </mat-radio-group>\r\n        </div>\r\n        <div class=\"example-full-width\">\r\n          <label id=\"example-radio-group-label\">Daily exercise</label>\r\n          <mat-radio-group [(ngModel)]=\"insurance.exercise\" [ngModelOptions]=\"{standalone: true}\">\r\n            <mat-radio-button value=\"true\">Yes</mat-radio-button>\r\n            <mat-radio-button value=\"false\">No</mat-radio-button>\r\n          </mat-radio-group>\r\n        </div>\r\n        <div class=\"example-full-width\">\r\n          <label id=\"example-radio-group-label\">Drugs</label>\r\n          <mat-radio-group [(ngModel)]=\"insurance.drugs\" [ngModelOptions]=\"{standalone: true}\">\r\n            <mat-radio-button value=\"true\">Yes</mat-radio-button>\r\n            <mat-radio-button value=\"false\">No</mat-radio-button>\r\n          </mat-radio-group>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n    <button class=\"middle\" mat-raised-button color=\"primary\" [disabled]=\"form.invalid\">Calculate insurance premium</button>\r\n  </form>\r\n</mat-card>\r\n","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatPaginator, MatTableDataSource} from '@angular/material';\r\nimport { Router } from '@angular/router';\r\nimport { InsuranceService } from './insurance.service';\r\nimport { SafePipe } from './safe.pipe';\r\nimport { UserService } from '../../auth/user.service';\r\n\r\n@Component({\r\n  selector: 'app-insurance',\r\n  templateUrl: './insurance.component.html',\r\n  styleUrls: ['./insurance.component.css']\r\n})\r\nexport class InsuranceComponent implements OnInit {\r\n\r\n  constructor(private _router: Router, private _is: InsuranceService, private _us: UserService) { }\r\n\r\n  displayedColumns: string[] = ['_id', 'name', 'age', 'gender', 'hypertension', 'pressure', 'sugar', 'overweight', 'smooking', 'alcohol', 'exercise', 'drugs', 'edit', 'show', 'delete'];\r\n  dataSource = new MatTableDataSource<any>([]);\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  totalpage = 1000;\r\n  page = 1;\r\n  pagesize = 9;\r\n\r\n  ngOnInit(): void {\r\n    this.dataSource.paginator = this.paginator;\r\n    this._is.get_all_insurances(localStorage.getItem(\"user_id\"), this.pagesize, this.page).subscribe(\r\n      res => {\r\n        console.log(\"res\", res);\r\n        this.dataSource = new MatTableDataSource<any>(res);\r\n      }\r\n    )\r\n  }\r\n\r\n  pagechange(pageevent: any) {\r\n    console.log(\"pageevent\", pageevent);\r\n    this._is.get_all_insurances(localStorage.getItem(\"user_id\"), this.pagesize, pageevent.pageIndex + 1).subscribe(\r\n      res => {\r\n        console.log(\"res\", res);\r\n        this.dataSource = new MatTableDataSource<any>(res);\r\n      }\r\n    )\r\n  }\r\n\r\n  // show(id:string) {\r\n\r\n  //   this._is.get_course(id).subscribe(\r\n  //     res => {\r\n  //       this._is.add_user(id, { _id: localStorage.getItem(\"user_id\")}).subscribe(\r\n  //         res => {}\r\n  //       )\r\n  //       // this._us.add_course(localStorage.getItem(\"user_id\"), res).subscribe(\r\n  //       //   res => { this._router.navigate([\"/course/show/\", id]) },\r\n  //       //   err => {}\r\n  //       // )\r\n  //     }\r\n  //   )\r\n  // }\r\n}\r\n","<div class=\"mat-elevation-z8\">\r\n    <table mat-table [dataSource]=\"dataSource\">\r\n  \r\n      <!-- Position Column -->\r\n      <ng-container matColumnDef=\"_id\">\r\n        <th mat-header-cell *matHeaderCellDef> ID. </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element._id}} </td>\r\n      </ng-container>\r\n  \r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"name\">\r\n        <th mat-header-cell *matHeaderCellDef> Name </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n      </ng-container>\r\n  \r\n      <!-- Weight Column -->\r\n      <ng-container matColumnDef=\"age\">\r\n        <th mat-header-cell *matHeaderCellDef> Age </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.age}} </td>\r\n      </ng-container>\r\n  \r\n      <!-- Symbol Column -->\r\n      <ng-container matColumnDef=\"gender\">\r\n        <th mat-header-cell *matHeaderCellDef> Gender </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.gender}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"hypertension\">\r\n        <th mat-header-cell *matHeaderCellDef> Hypertension </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.hypertension}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"pressure\">\r\n        <th mat-header-cell *matHeaderCellDef> Pressure </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.pressure}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"sugar\">\r\n        <th mat-header-cell *matHeaderCellDef> Sugar </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.sugar}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"overweight\">\r\n        <th mat-header-cell *matHeaderCellDef> Overweight </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.overweight}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"smooking\">\r\n        <th mat-header-cell *matHeaderCellDef> Smooking </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.smooking}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"alcohol\">\r\n        <th mat-header-cell *matHeaderCellDef> Alcohol </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.alcohol}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"exercise\">\r\n        <th mat-header-cell *matHeaderCellDef> Exercise </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.exercise}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"drugs\">\r\n        <th mat-header-cell *matHeaderCellDef> Drugs </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.drugs}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"edit\">\r\n        <th mat-header-cell *matHeaderCellDef> Update </th>\r\n        <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"primary\">Edit\r\n        </button> </td>\r\n        <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"warn\">Delete\r\n        </button> </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"show\">\r\n        <th mat-header-cell *matHeaderCellDef> View </th>\r\n        <td mat-cell *matCellDef=\"let element\"> <button mat-button >Show\r\n        </button> </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"delete\">\r\n        <th mat-header-cell *matHeaderCellDef> Destroy </th>\r\n        <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"warn\">Delete\r\n        </button> </td>\r\n      </ng-container>\r\n  \r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n  \r\n    <mat-paginator  [length]=\"totalpage\" [pageSize]=\"pagesize\"\r\n    (page)=\"pagechange($event)\">\r\n    </mat-paginator>\r\n  </div>\r\n  ","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Insurance } from './insurance';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InsuranceService {\r\n\r\n  public dburl = \"\";\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  public calculate_insurance(insurance):Observable<any> {\r\n    return this._http.post<any>(this.dburl + \"/api/insurance/calculate\", insurance);\r\n  }\r\n\r\n  public get_all_insurances(id:string, pagesize:number, page:number):Observable<any[]> {\r\n    const query = `?pagesize=${pagesize}&page=${page}&id=${id}`;\r\n    return this._http.get<any[]>(this.dburl + \"/api/insurance\" + query);\r\n  }\r\n\r\n  public get_insurance(id:string):Observable<any> {\r\n    return this._http.get<any>(this.dburl + \"/api/insurance/\" + id);\r\n  }\r\n\r\n  public add_user(id:string, user:any):Observable<any> {\r\n    return this._http.patch<any>(this.dburl + \"/api/insurance/\" + id, user);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'safe'\r\n})\r\nexport class SafePipe implements PipeTransform {\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  transform(url) {\r\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { UserService } from '../../../auth/user.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  @Output() toggleSideBarForMe: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(private _us:UserService, private _router:Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  toggleSideBar() {\r\n    this.toggleSideBarForMe.emit();\r\n  }\r\n\r\n  logout() {\r\n\t  this._us.logout();\r\n\t  this._router.navigate([\"/login\"]);\r\n\t}\r\n}\r\n","<mat-toolbar color=\"primary\">\r\n  <mat-toolbar-row>\r\n    <button mat-icon-button (click)=\"toggleSideBar()\">\r\n      <mat-icon>menu</mat-icon>\r\n    </button>\r\n\r\n    <span>Insurance</span>\r\n\r\n    <div fxFlex fxLayout=\"row\" fxLayoutAlign=\"flex-end\">\r\n      <ul fxLayout=\"row\">\r\n        <li>\r\n          <button mat-button [matMenuTriggerFor]=\"menu\">\r\n            <mat-icon>person_outline</mat-icon>\r\n          </button>\r\n          <mat-menu #menu=\"matMenu\">\r\n            <button mat-menu-item (click)=\"logout()\"><mat-icon>exit_to_app</mat-icon>Sign out</button>\r\n          </mat-menu>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </mat-toolbar-row>\r\n</mat-toolbar>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.scss']\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n\r\n  username = localStorage.getItem(\"currentuser\");\r\n  email = localStorage.getItem('email');\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    console.log(\"username\", this.username);\r\n  }\r\n\r\n}\r\n","<mat-nav-list>\r\n  <div class=\"profile-card\">\r\n    <div class=\"header\">\r\n      <h4>{{ username }}</h4>\r\n      <h6>{{ email }}</h6>\r\n    </div>\r\n    <img src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" alt=\"Meenakshi\">\r\n  </div>\r\n\r\n  <mat-divider></mat-divider>\r\n\r\n  <h2 matSubheader>Pages</h2>\r\n\r\n  <a mat-list-item routerLinkActive=\"list-item-active\" routerLink=\"/\">Dashboard</a>\r\n  <a mat-list-item routerLinkActive=\"list-item-active\" routerLink=\"/insurances\">Insurance</a>\r\n  <a mat-list-item routerLinkActive=\"list-item-active\" routerLink=\"/insurance/new\">New insurance</a>\r\n\r\n</mat-nav-list>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\nimport { MatDividerModule, MatToolbarModule, MatIconModule, MatButtonModule, MatMenuModule, MatListModule } from '@angular/material';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    HeaderComponent,\r\n    SidebarComponent,\r\n    FooterComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatDividerModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    FlexLayoutModule,\r\n    MatMenuModule,\r\n    MatListModule,\r\n    RouterModule\r\n  ],\r\n  exports: [\r\n    HeaderComponent,\r\n    SidebarComponent,\r\n    FooterComponent\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  api_url: \"http://localhost:3000/api/\"\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}